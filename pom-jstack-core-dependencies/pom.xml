<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>br.com.jstack</groupId>
        <artifactId>pom-parent-jstack-core</artifactId>
        <version>0.0.7-SNAPSHOT</version>
    </parent>


    <artifactId>pom-jstack-core-dependencies</artifactId>
    <name>pom-jstack-core-dependencies</name>
    <packaging>pom</packaging>

    <properties>
        <springboot.version>3.4.5</springboot.version>
        <spring-boot-starter-test.version>3.4.5</spring-boot-starter-test.version>

        <spring-security-web.version>6.2.4</spring-security-web.version>
        <spring-security-crypto.version>6.2.4</spring-security-crypto.version>

        <spring-cloud-context.version>2023.0.1</spring-cloud-context.version>
        <tomcat-embed-core.version>10.1.36</tomcat-embed-core.version>
        <jakarta.persistence-api.version>3.1.0</jakarta.persistence-api.version>

        <springdoc-openapi.version>2.8.8</springdoc-openapi.version>

        <spring-cloud-gcp-starter-data-firestore.version>5.1.0</spring-cloud-gcp-starter-data-firestore.version>

        <mapstruct.version>1.5.5.Final</mapstruct.version>
        <jackson-core.version>2.17.1</jackson-core.version>
        <jackson-databind-nullable.version>0.2.6</jackson-databind-nullable.version>
        <grpc-protobuf.version>1.64.0</grpc-protobuf.version>
        <grpc-testing.version>1.64.0</grpc-testing.version>
        <junit-pioneer.version>2.2.0</junit-pioneer.version>
        <mockito.version>5.2.0</mockito.version>
        <netty.version>4.1.107.Final</netty.version>
        <nimbus-jose-jwt.version>9.38.4</nimbus-jose-jwt.version>

        <rhino.version>1.7.14</rhino.version>
        <gson.version>2.11.0</gson.version>
        <veracodeAnnotations.version>1.0.0</veracodeAnnotations.version>
        <google-api-services-drive.version>v3-rev20240415-2.0.0</google-api-services-drive.version>
        <google-api-services-driveactivity.version>v2-rev20240227-2.0.0</google-api-services-driveactivity.version>
        <protobuf-java.version>3.25.3</protobuf-java.version>
        <easy-random-core.version>5.0.0</easy-random-core.version>
        <bucket4j.version>8.10.1</bucket4j.version>
        <commons-io.version>2.15.1</commons-io.version>
        <commons-text.version>1.11.0</commons-text.version>
        <javax.annotation-api.version>1.3.2</javax.annotation-api.version>
        <json-smart.version>2.4.11</json-smart.version>

        <intb.crypt.version>1.0.0</intb.crypt.version>
        <jwt.version>1.0.0</jwt.version>
        <h2.version>2.2.224</h2.version>
        <spring-cloud-gcp-starter-storage.version>5.1.0</spring-cloud-gcp-starter-storage.version>
        <app-starters-micrometer-common.version>3.2.3</app-starters-micrometer-common.version>


    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- Dependências Spring Boot -->
            <dependency>
                <!-- Import dependency management from Spring Boot -->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${springboot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${spring-boot-starter-test.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>net.minidev</groupId>
                        <artifactId>json-smart</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- Spring Cloud (incluindo GCP) -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud-context.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>com.google.cloud</groupId>
                <artifactId>spring-cloud-gcp-dependencies</artifactId>
                <version>${spring-cloud-gcp-starter-data-firestore.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-context</artifactId>
                <version>${spring-cloud-context.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework.security</groupId>
                        <artifactId>spring-security-crypto</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- Bibliotecas de terceiros (MapStruct, Jackson, Gson, etc.) -->
            <!-- PRECISAM ESTAR JUNTAS -->
            <!-- https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-ui -->
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
                <version>${springdoc-openapi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-starter-common</artifactId>
                <version>${springdoc-openapi.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-web</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- PRECISAM ESTAR JUNTAS -->
            <!-- https://mvnrepository.com/artifact/org.mapstruct/mapstruct -->
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>

            <dependency>
                <groupId>org.openapitools</groupId>
                <artifactId>jackson-databind-nullable</artifactId>
                <version>${jackson-databind-nullable.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>

            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-text</artifactId>
                <version>${commons-text.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.annotation</groupId>
                <artifactId>javax.annotation-api</artifactId>
                <version>${javax.annotation-api.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-web</artifactId>
                <version>${spring-security-web.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-crypto</artifactId>
                <version>${spring-security-crypto.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.tomcat.embed</groupId>
                <artifactId>tomcat-embed-core</artifactId>
                <version>${tomcat-embed-core.version}</version>
            </dependency>

            <dependency>
                <groupId>jakarta.persistence</groupId>
                <artifactId>jakarta.persistence-api</artifactId>
                <version>${jakarta.persistence-api.version}</version>
            </dependency>

            <!-- Dependências específicas do projeto -->
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>pom-unified-core-spring-boot-starter</artifactId>
                <version>${project.version}</version>
            </dependency>

<!--            <dependency>-->
<!--                <groupId>br.com.votorantim.atle.base</groupId>-->
<!--                <artifactId>sbootlib-atle-base-mvc-autoconfiguration</artifactId>-->
<!--                <version>${project.version}</version>-->
<!--            </dependency>-->

            <!-- Dependências de teste -->
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-inline</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jeasy</groupId>
                <artifactId>easy-random-core</artifactId>
                <version>${easy-random-core.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>1.5.0</version>
                <executions>
                    <execution>
                        <id>flattened-pom</id>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                        <configuration>
                            <flattenDependencyMode>all</flattenDependencyMode>
                            <flattenMode>bom</flattenMode>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
